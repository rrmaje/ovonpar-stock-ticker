play.http.secret.key="UR1UhJQ0Hn5A5IK4/57nXsU;Y_kt2VW>DshG:XO/iAILNHSpd14Y/YH3FHf9oh`]"

play.server.pidfile.path=/dev/null

ost.key=oycVvGwqQoaqTEacpgK4VtwoKpQ0a7nWLPhspKpwk3B
mailer.url=${?OST_MAILER_URL}

db.default.driver=org.postgresql.Driver
db.default.url=${?OST_POSTGRES_URL}
db.default.username="postgres"

fixedConnectionPool = 9


play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}


play.server.https.keyStore.path=conf/server.keystore
play.server.https.keyStore.password=dimLUYwx4M
play.filters {

enabled += "play.filters.cors.CORSFilter"
  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  # ~~~~~
  # Play provides a filter that lets you configure which hosts can access your application.
  # This is useful to prevent cache poisoning attacks.
hosts.allowed.0=${OST_SERVICE_URL}
}
play.server.https.port=9443

market-data {
  address = ${?OST_REQUEST_ADDRESS}
  port = 5000
  username = 102030
  password = parity
}

trade-report {
  address  = ${?OST_REQUEST_ADDRESS}
  port     = 6000
  username = 102030
  password = parity
}

order-entry {
  address  = ${?OST_REQUEST_ADDRESS} 
  port     = 4000
  username = 102030 
  password = parity
}

instruments {
  price-integer-digits = 4
  size-integer-digits  = 7

  S-class {
    price-fraction-digits = 2
    size-fraction-digits  = 0
  }
  M-class {
    price-fraction-digits = 2
    size-fraction-digits  = 0
  }
  L-class {
    price-fraction-digits = 2
    size-fraction-digits  = 0
  }

}

